{"version":3,"sources":["../src/ctrl.js"],"names":["getColorForValue","data","value","i","thresholds","length","colorMap","_","first","MetricsPanelCtrl","$","kbn","config","TimeSeries","d3","panelDefaults","fontSizes","fontTypes","pieConfig","donutRadius","legendRemap","strokeColor","strokeWidth","highlightColor","labelColor","D3DrillPiePanelCtrl","$scope","$injector","alertSrv","defaults","panel","gaugeDivId","id","scoperef","alertSrvRef","initialized","panelContainer","svg","panelWidth","panelHeight","pie","events","on","onInitEditMode","bind","onRender","onDataReceived","onDataError","panels","grafanaBootData","settings","thisPanel","pluginId","thisPanelPath","baseUrl","optionsPath","addEditorTab","container","tmpPanelWidth","clientWidth","getPanelHeight","actualWidth","tmpPanelHeight","ctrl","height","row","replace","actualHeight","parseInt","remove","getPanelWidth","margin","top","right","bottom","left","width","minDim","containerId","gradient","label","d","percent","inner","tooltip","name","transition","transitionDuration","legendId","stroke","undefined","Array","isArray","psd3","Pie","legendColor","map","index","indexOf","valueMaps","splice","render","push","op","text","rangeMap","rangeMaps","from","to","scope","elem","attrs","setContainer","find","renderedSVG","isNumber","decimals","scaledDecimals","delta","dec","Math","floor","log","LN10","magn","pow","norm","size","result","max","valueFormatted","valueRounded","subItem","format","err","dataList","seriesData","series","datapoints","alias","target","flotpairs","getFlotPairs","nullPointMode","tmp","colors","templateUrl"],"mappings":"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","file":"ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport kbn from 'app/core/utils/kbn';\nimport config from 'app/core/config';\nimport TimeSeries from 'app/core/time_series2';\n//import * as d3 from '../bower_components/d3/d3.js';\nimport * as d3 from './external/d3.v3.min';\nimport './css/psd3.css!';\nimport './external/psd3';\n\nconst panelDefaults = {\n  fontSizes: [4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70],\n  fontTypes: [\n    'Arial', 'Avant Garde', 'Bookman',\n    'Consolas', 'Courier', 'Courier New',\n    'Garamond', 'Helvetica', 'Open Sans',\n    'Palatino', 'Times', 'Times New Roman',\n    'Verdana'\n  ],\n  pieConfig: {\n    donutRadius: 10,\n    legendRemap: {'Pay Calcio':'Calcio','Mediaset Storiche':'Storiche','Mediaset Tematiche': 'Tematiche', 'Pay Intrattenimento': 'Intrattenimento'},\n    strokeColor: \"white\",\n    strokeWidth: 2,\n    highlightColor: \"grey\",\n    labelColor: \"black\"\n  }\n};\n\nclass D3DrillPiePanelCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, alertSrv) {\n    super($scope, $injector);\n    // merge existing settings with our defaults\n    _.defaults(this.panel, panelDefaults);\n    this.panel.gaugeDivId = 'd3piedrill_svg_' + this.panel.id;\n    this.scoperef = $scope;\n    this.alertSrvRef = alertSrv;\n    this.initialized = false;\n    this.panelContainer = null;\n    this.svg = null;\n    this.panelWidth = null;\n    this.panelHeight = null;\n    this.data = [];\n    this.pie = null;\n\n    //console.log(\"D3GaugePanelCtrl constructor!\");\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    //console.log(\"D3GaugePanelCtrl constructor done!\");\n  }\n\n  onInitEditMode() {\n    // determine the path to this plugin\n    var panels = grafanaBootData.settings.panels;\n    var thisPanel = panels[this.pluginId];\n    var thisPanelPath = thisPanel.baseUrl + '/';\n    // add the relative path to the partial\n    var optionsPath = thisPanelPath + 'partials/editor.options.html';\n    this.addEditorTab('Options', optionsPath, 2);\n    /*var radialMetricsPath = thisPanelPath + 'partials/editor.radialmetrics.html';\n    this.addEditorTab('Radial Metrics', radialMetricsPath, 3);\n    var thresholdingPath = thisPanelPath + 'partials/editor.thresholding.html';\n    this.addEditorTab('Thresholding', thresholdingPath, 4);\n    var mappingsPath = thisPanelPath + 'partials/editor.mappings.html';\n    this.addEditorTab('Value Mappings', mappingsPath, 5);\n    */\n  }\n\n  /**\n   * [setContainer description]\n   * @param {[type]} container [description]\n   */\n  setContainer(container) {\n    this.panelContainer = container;\n  }\n\n  getPanelWidth() {\n    // with a full sized panel, this comes back as zero, so calculate from the div panel instead\n    var tmpPanelWidth = this.panelContainer[0].clientWidth;\n    if (tmpPanelWidth === 0) {\n      // just use the height...\n      tmpPanelWidth = this.getPanelHeight();\n      tmpPanelWidth -= 24;\n      if (tmpPanelWidth < 250) {\n        tmpPanelWidth = 250;\n      }\n      return tmpPanelWidth;\n      //var tmpPanelWidthCSS = $(\"div.panel\").css(\"width\");\n      //var tmpPanelWidthPx = tmpPanelWidthCSS.replace(\"px\",\"\");\n      //tmpPanelWidth = parseInt(tmpPanelWidthPx);\n    }\n    var actualWidth = tmpPanelWidth;\n    return actualWidth;\n  }\n\n  getPanelHeight() {\n    // panel can have a fixed height via options\n    var tmpPanelHeight = this.$scope.ctrl.panel.height;\n    // if that is blank, try to get it from our row\n    if (typeof tmpPanelHeight === 'undefined') {\n      // get from the row instead\n      tmpPanelHeight = this.row.height;\n      // default to 250px if that was undefined also\n      if (typeof tmpPanelHeight === 'undefined') {\n        tmpPanelHeight = 250;\n      }\n    }\n    else {\n      // convert to numeric value\n      tmpPanelHeight = tmpPanelHeight.replace(\"px\",\"\");\n    }\n    var actualHeight = parseInt(tmpPanelHeight);\n    // grafana minimum height for a panel is 250px\n    if (actualHeight < 250) {\n      actualHeight = 250;\n    }\n    return actualHeight;\n  }\n\n  clearSVG() {\n    if ($('#'+this.panel.gaugeDivId).length) {\n      //console.log(\"Clearing SVG\");\n      $('#'+this.panel.gaugeDivId).remove();\n    }\n  }\n  onRender() {\n    // update the values to be sent to the gauge constructor\n   // this.setValues(this.data);\n    //console.log(\"Render D3\");\n   // this.clearSVG();\n    // use jQuery to get the height on our container\n    this.panelWidth = this.getPanelWidth();\n    this.panelHeight = this.getPanelHeight();\n\n    var margin = {top: 10, right: 0, bottom: 30, left: 0};\n    var width = this.panelWidth;\n    var height = this.panelHeight;\n\n    if (width > 217) {\n      width = 217;\n    }\n\n    var minDim = height;\n    if (height > width) {\n      minDim = width;\n    }\n\n    minDim = minDim -60;\n    height = minDim;\n    width = minDim;\n\n    var config = {\n      containerId: this.panel.gaugeDivId,\n      width: width,\n      height: height,\n      data: this.data,\n      gradient: true,\n      label: function (d) {\n        /*\n         var remap = {'Pay Calcio':'Calcio','Mediaset Storiche':'Storiche','Mediaset Tematiche': 'Tematiche', 'Pay Intrattenimento': 'Intratt.'};\n         if (remap[d.data.name]) {\n         return remap[d.data.name];\n         } else {\n         return d.data.name;\n         }*/\n        return d.data.percent + \"%\";\n      },\n      labelColor: this.panel.pieConfig.labelColor,\n      value: \"value\",\n      inner: \"drilldown\",\n      tooltip: function (d) {\n        return \"<p style='font-weight: bold;'>\" + d.name + \"</p><p>Count: \" + d.value + \"</p><p>Percent: \" + d.percent + \"%</p>\";\n      },\n      transition: \"bounce\",\n      transitionDuration: 250,\n      donutRadius: this.panel.pieConfig.donutRadius,\n      legendId: this.panel.gaugeDivId+'Legend',\n      legendRemap: this.panel.pieConfig.legendRemap,\n      stroke: this.panel.pieConfig.strokeColor,\n      strokeWidth: this.panel.pieConfig.strokeWidth,\n      highlightColor: this.panel.pieConfig.highlightColor\n    };\n    if (this.data !== undefined && Array.isArray(this.data) && this.data.length > 0) {\n      if (this.pie === null) {\n        this.pie = new psd3.Pie(config);\n        this.pie.config.transitionDuration = 0;\n      }\n      this.pie.config.donutRadius = this.panel.pieConfig.donutRadius;\n      this.pie.config.legendRemap =  this.panel.pieConfig.legendRemap;\n      this.pie.config.stroke = this.panel.pieConfig.strokeColor;\n      this.pie.config.strokeWidth = this.panel.pieConfig.strokeWidth;\n      this.pie.config.highlightColor = this.panel.pieConfig.highlightColor;\n      this.pie.config.labelColor = this.panel.pieConfig.labelColor;\n      this.pie.config.legendColor = this.panel.pieConfig.legendColor;\n\n      this.pie.replace(this.data);\n    }\n  }\n\n  removeValueMap(map) {\n    var index = _.indexOf(this.panel.valueMaps, map);\n    this.panel.valueMaps.splice(index, 1);\n    this.render();\n  }\n\n  addValueMap() {\n    this.panel.valueMaps.push({value: '', op: '=', text: '' });\n  }\n\n  removeRangeMap(rangeMap) {\n    var index = _.indexOf(this.panel.rangeMaps, rangeMap);\n    this.panel.rangeMaps.splice(index, 1);\n    this.render();\n  }\n\n  addRangeMap() {\n    this.panel.rangeMaps.push({from: '', to: '', text: ''});\n  }\n\n\n  link(scope, elem, attrs, ctrl) {\n    //console.log(\"d3gauge inside link\");\n    ctrl.setContainer(elem.find('.grafana-d3-drill-pie'));\n    // Check if there is a gauge rendered\n    var renderedSVG = $('#'+this.panel.gaugeDivId);\n    // console.log(\"link: found svg length \" + renderedSVG.length);\n    if (renderedSVG.length === 0) {\n      // no gauge found, force a render\n      this.render();\n    }\n  }\n\n\n  getDecimalsForValue(value) {\n    if (_.isNumber(this.panel.decimals)) {\n      return {decimals: this.panel.decimals, scaledDecimals: null};\n    }\n\n    var delta = value / 2;\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n    var magn = Math.pow(10, -dec),\n        norm = delta / magn, // norm is between 1.0 and 10.0\n        size;\n\n    if (norm < 1.5) {\n      size = 1;\n    } else if (norm < 3) {\n      size = 2;\n      // special case for 2.5, requires an extra decimal\n      if (norm > 2.25) {\n        size = 2.5;\n        ++dec;\n      }\n    } else if (norm < 7.5) {\n      size = 5;\n    } else {\n      size = 10;\n    }\n\n    size *= magn;\n\n    // reduce starting decimals if not needed\n    if (Math.floor(value) === value) { dec = 0; }\n\n    var result = {};\n    result.decimals = Math.max(0, dec);\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n    return result;\n  }\n\n  getValueText() {\n    return this.data.valueFormatted;\n  }\n\n  getValueRounded() {\n    return this.data.valueRounded;\n  }\n\n  setUnitFormat(subItem) {\n    this.panel.format = subItem.value;\n    this.render();\n  }\n\n  onDataError(err) {\n    this.onDataReceived([]);\n  }\n\n  onDataReceived(dataList) {\n   // this.series = dataList.map(this.seriesHandler.bind(this));\n    this.data = dataList;\n    //console.log(\"Data value: \" + data.value + \" formatted: \" + data.valueFormatted + \" rounded: \" + data.valueRounded );\n    //var fmtTxt = kbn.valueFormats[this.panel.format];\n    //console.log(\"Format: \" + fmtTxt);\n    this.render();\n  }\n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target,\n    });\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n\n  invertColorOrder() {\n    var tmp = this.panel.colors[0];\n    this.panel.colors[0] = this.panel.colors[2];\n    this.panel.colors[2] = tmp;\n    this.render();\n  }\n}\n\nfunction getColorForValue(data, value) {\n  for (var i = data.thresholds.length; i > 0; i--) {\n    if (value >= data.thresholds[i-1]) {\n      return data.colorMap[i];\n    }\n  }\n  return _.first(data.colorMap);\n}\n\nD3DrillPiePanelCtrl.templateUrl = 'partials/template.html';\nexport {\n  D3DrillPiePanelCtrl,\n  D3DrillPiePanelCtrl as MetricsPanelCtrl\n};\n"]}